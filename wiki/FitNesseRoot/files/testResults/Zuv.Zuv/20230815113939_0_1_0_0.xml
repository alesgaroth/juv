<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20230503</FitNesseVersion>
  <rootPath>Zuv.Zuv</rootPath>
  <result>
    <counts>
      <right>0</right>
      <wrong>2</wrong>
      <ignores>0</ignores>
      <exceptions>0</exceptions>
    </counts>
    <date>2023-08-15T11:39:39Z</date>
    <runTimeInMillis>297</runTimeInMillis>
    <content>&lt;br/&gt;&lt;div class="contents"&gt;
	&lt;b&gt;Contents:&lt;/b&gt;
	&lt;ul class="toc1"/&gt;&lt;ul class="toc1"/&gt;
&lt;/div&gt;
&lt;br/&gt;&lt;span class="meta"&gt;classpath: /workspaces/juv/target/test-classes&lt;/span&gt;&lt;br/&gt;&lt;span class="meta"&gt;variable defined: TEST_SYSTEM=slim&lt;/span&gt;
&lt;br/&gt;Zuv is a flow based programming language.  Some simple examples may help.&lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td colspan="2"&gt;&lt;span class="pass"&gt;com.alesgaroth.zuv.fixtures.Constants&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;input&lt;/td&gt;
		&lt;td&gt;output?&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;[&lt;span class="diff"&gt;0&lt;/span&gt;] &lt;span class="fail"&gt;expected [&lt;span class="diff"&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;[&lt;span class="diff"&gt;0&lt;/span&gt;] &lt;span class="fail"&gt;expected [&lt;span class="diff"&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
</content>
    <relativePageName>Zuv</relativePageName>
    <instructions>
      <instructionResult>
        <instruction>{id='decisionTable_0_0', instruction='make', instanceName='decisionTable_0', className='com.alesgaroth.zuv.fixtures.Constants', args=[]}</instruction>
        <slimResult>pass(com.alesgaroth.zuv.fixtures.Constants)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>decisionTable_0_0</instructionId>
          <col>0</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
          <evaluationMessage>com.alesgaroth.zuv.fixtures.Constants</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_0_4', instruction='call', instanceName='decisionTable_0', methodName='setInput', args=[1]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_0_4</instructionId>
          <col>0</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_0_6', instruction='call', instanceName='decisionTable_0', methodName='output', args=[]}</instruction>
        <slimResult>fail(a=0;e=1)</slimResult>
        <expectation>
          <status>fail</status>
          <instructionId>decisionTable_0_6</instructionId>
          <col>1</col>
          <row>2</row>
          <type>ReturnedValueExpectation</type>
          <actual>0</actual>
          <expected>1</expected>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_0_8', instruction='call', instanceName='decisionTable_0', methodName='setInput', args=[2]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_0_8</instructionId>
          <col>0</col>
          <row>3</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_0_10', instruction='call', instanceName='decisionTable_0', methodName='output', args=[]}</instruction>
        <slimResult>fail(a=0;e=2)</slimResult>
        <expectation>
          <status>fail</status>
          <instructionId>decisionTable_0_10</instructionId>
          <col>1</col>
          <row>3</row>
          <type>ReturnedValueExpectation</type>
          <actual>0</actual>
          <expected>2</expected>
        </expectation>
      </instructionResult>
    </instructions>
  </result>
  <executionLog>
    <testSystem>slim:fitnesse.slim.SlimService</testSystem>
    <command>/usr/lib/jvm/msopenjdk-current/bin/java -cp /workspaces/juv/target/test-classes:/home/vscode/.m2/repository/org/fitnesse/fitnesse/20230503/fitnesse-20230503.jar fitnesse.slim.SlimService 1</command>
    <exitCode>0</exitCode>
    <stdOut>WARNING: A terminally deprecated method in java.lang.System has been called
WARNING: System::setSecurityManager has been called by fitnesse.slim.instructions.SystemExitSecurityManager (file:/home/vscode/.m2/repository/org/fitnesse/fitnesse/20230503/fitnesse-20230503.jar)
WARNING: Please consider reporting this to the maintainers of fitnesse.slim.instructions.SystemExitSecurityManager
WARNING: System::setSecurityManager will be removed in a future release
</stdOut>
    <stdErr>Slim  Map converter not loaded: could not find class org/htmlparser/NodeFilter

</stdErr>
  </executionLog>
  <finalCounts>
    <right>0</right>
    <wrong>1</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>805</totalRunTimeInMillis>
</testResults>

